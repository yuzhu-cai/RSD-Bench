Task:
# Requirements Document for Online_Cultural_Festivals Web Application

## 1. Objective
Develop a comprehensive web application that showcases various online cultural festivals, allowing users to access information, interact with festival content, and engage with forms to submit their experiences or inquiries.

## 2. Language
The required development language for this web application is Python.

## 3. Page Design

### Page 1: Login Page
- **Page Title:** User Login
- **Element IDs:**
  - `login-form`: The container for the login form.
  - `username`: Input field for the username.
  - `password`: Input field for the password.
  - `login-button`: Button to submit the login form.
  - `error-message`: Area to display error messages on failed login attempts.

### Page 2: Festival Overview Page
- **Page Title:** Online Cultural Festivals Overview
- **Overview:** This page displays a list of available cultural festivals, with each festival's name linked to a detailed view page.
- **Element IDs:**
  - `festivals-list`: Container displaying a list of cultural festivals.
  - `festival_item_<index>` (where `<index>` is the festival number starting from 0): The name of each festival in the list.(Type: Anchor tag)
  - `submit-experience-button`: Button that navigates the user to the User Submissions Page (Page 4).
  
### Page 3: Festival Details Page
- **Page Title:** Festival Details
- **Element IDs:**
  - `festival-title`: The title of the selected festival.
  - `festival-info`: Detailed information about the festival, including description,date,category and performers.
  - `comments-section`: Area for users to leave comments or feedback about the festival.
  - `comment-name`: Input field for users to submit their name.
  - `comment-input`: Input field for users to submit their comments.
  - `submit-comment-button`: Button to submit the comment.
  - `back-button`: Button to navigate back to the festival overview page.

### Page 4: User Submissions Page
- **Page Title:** Submit Your Experience
- **Element IDs:**
  - `submission-form`: The container for the submission form.
  - `user-name`: Input field for the user’s name.
  - `experience-description`: Textarea for the user to describe their festival experience.
  - `submit-button`: Button to submit the form.
  - `success-message`: Area to display a message upon successful submission.

## 4. Data Storage
Data will be stored in local text documents within a directory named `data`. Each type of data will be stored in a separate text file following the formats provided below.

1. **User Data (user_data.txt)**
   - Format: `username,password`
   - Example:
     ```
     john_doe,password123
     jane_smith,securepass456
     ```

2. **Festival Data (festival_data.txt)**
   - Format: `festival_name;festival_description;date;category;performers`
   - Example:
     ```
     Diwali Festival;An annual celebration of lights;2023-11-12;Cultural;Various Artists
     Holi Celebration;Festival of colors;2023-03-08;Religious;Local Dancers
     ```

3. **User Comments (comments.txt)**
   - Format: `festival_name;comment_name;comment`
   - Example:
     ```
     Diwali Festival;john_doe;The festival was mesmerizing!
     Holi Celebration;jane_smith;I loved the vibrant colors and music.
     ```

4. **User Experiences (user_experiences.txt)**
   - Format: `user_name;experience_description`
   - Example:
     ```
     john_doe;Attended the Diwali Festival; it was unforgettable!
     jane_smith;The Holi Celebration brought back so many memories.
     ```

Files will be stored in the following directory structure:
```
data/
  ├── user_data.txt
  ├── festival_data.txt
  ├── comments.txt
  └── user_experiences.txt
```

This document outlines the essential requirements for the web application, ensuring clarity for development and future testing.

Config:
ChatEnvConfig.with_memory: False
ChatEnvConfig.clear_structure: True
ChatEnvConfig.git_management: False
ChatEnvConfig.gui_design: True
ChatEnvConfig.incremental_develop: False
ChatEnvConfig.background_prompt: ChatDev is a software company powered by multiple intelligent agents, such as chief executive officer, chief human resources officer, chief product officer, chief technology officer, etc, with a multi-agent organizational structure and the mission of 'changing the digital world through programming'.
ChatEnvConfig.set_free_port: True


Roster:
Chief Executive Officer, Counselor, Chief Human Resource Officer, Chief Product Officer, Chief Technology Officer, Programmer, Code Reviewer, Software Test Engineer, Chief Creative Officer

Modality:


Ideas:


Language:


Code_Version:
32.0

Proposed_images:
0

Incorporated_images:
0

