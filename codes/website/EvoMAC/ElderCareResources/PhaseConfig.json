{
  "CodingPlan": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Chief Technology Officer",
      "phase_prompt": [
        "According to the new user's task and our software designs listed below: ",
        "Task: \"{task}\".",
        "Task description: \"{description}\".",
        "Modality: \"website\".",
        "Programming Language: \"Python and HTML\"",
        "Ideas:\"{ideas}\"",
        "Carefully study the task requirements and, based on these, provide a complete list of the code file names needed to implement the task. Additionally, present the file structure in a hierarchical manner. Note that if it does not involve very complex functions, the backend code should be in one code file.",
        "The decomposition should be in the following format:",
        "### File Structure",
        "```",
        "File Structure",
        "```",
        "### File Descriptions",
        "```",
        "Your descriptions",
        "```"
      ]
    },
  "Organizing": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Task description: \"{description}\".",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Ideas:\"{ideas}\"",
      "Requirements:\"{requirements}\"",
      "Coding plan: \"{codes}\"",
      "Think step by step and reason yourself to the right decisions to decompose the overall coding plans into smaller tasks and assign them to different programmers.",
      "The decomposition should be in the following format: \"COMPOSITION\" is the composition of tasks, and \"Workflow\" is the workflow of the programmers. Each task is assigned to a programmer, and the workflow shows the dependencies between tasks. ",
      "### COMPOSITION",
      "```",
      "Task 1: Task 1 description",
      "Task 2: Task 2 description",
      "```",
      "### WORKFLOW",
      "```",
      "Task 1: []",
      "Task 2: [Task 1]",
      "```",
      "Please note that the decomposition should be both effective and efficient.",
      "1) According to the Coding plan, each decomposed task should only be responsible for implementing one code file mentioned in Coding Plan.",
      "2) Data files do not need to be assigned to programmers for implementation.",
      "3) If there is a corresponding description in the original task, please include it in the subtask and clearly and structurally highlight the key requirements of the task.",
      "4) The first subtask should implement the backend code, while the REMAINING SUBTASKS should develop the frontend code based on backend codes.",
      "5) Each code file should be assigned only one subtask; multiple subtasks for a single code file are not necessary.",
      "6) If the subtask is to complete the frontend code, it should be explicitly noted in the subtask that all URLs in the frontend code should be routes, not HTML file names.",
      "7) If the subtask is to complete the backend code, it should include the following clear descriptions:",
      "    - The website should be accessible via the local port 5000, and the login page can be directly accessed through the route '/'.",
      "    - The backend code must implement routing for all frontend pages, ensuring that each route corresponds to the frontend code.",
      "    - File read and write operations in the backend code should start from the first line of the file, without any encryption, using plain text.",
      "In addition to these descriptions, the subtask should list all frontend code files and incorporate the original task's supplementary condition.",
      "8) The workflow should not contain circles!"
    ]
  },
  "SubCodeComplete": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Sub-Task description: \"{subtask}\"",
      "Codes:",
      "\"{codes}\"",
      "Coding plan:",
      "\"{coding_plan}\"",
      "As the {assistant_role}, to satisfy the complete function of our developed software, you have to implement all functions which are related to the subtask.",
      "You ONLY need to complete ONE code file mentioned in the subtask.",
      "You DO NOT need to implement any other code files.",
      "If you have modified a certain part of the source code, please output all the code in the modified code file in its entirety without omitting it.",
      "If the code file for the subtask description has already been implemented in the above Codes and does not require any modifications, please output <INFO> None.",
      "Note that both the logicshould be fully functional! No placeholder (such as 'pass' in Python), strictly following the required format.",
      "If the task is to complete the backend code, carefully reference the frontend code files to generate the corresponding backend code. The website should be accessible via the local port 5000, with the login page as the first page displayed upon opening.",
      "If the task is to complete the frontend code, the URLs for the linked pages must be specified as routes, not an HTML file name.",
      "Note that the front-end code is solely responsible for the presentation and interaction of the website's pages, while all functionalities are implemented by the back-end code.",
      "Finally, ensure the functions are consistent among different files, and correctely imported.",
      "You should output the code content in ONE file. Each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code. Format:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```"
    ]
  },
  "CodeComplete": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Codes:",
      "\"{codes}\"",
      "Unimplemented File:",
      "\"{unimplemented_file}\"",
      "In our software, each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```",
      "As the {assistant_role}, to satisfy the complete function of our developed software, you have to implement all methods in the {unimplemented_file} file which contains a unimplemented class. Now, implement all methods of the {unimplemented_file} and all other codes needed, then output the fully implemented codes, strictly following the required format."
    ]
  },
  "CodeReviewComment": {
    "assistant_role_name": "Code Reviewer",
    "user_role_name": "Programmer",
    "phase_prompt": [
      "According to the new user's task and our software designs: ",
      "Task: \"{task}\".",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Ideas: \"{ideas}\"",
      "Codes:",
      "\"{codes}\"",
      "As the {assistant_role}, to make the software directly operable without further coding, ChatDev have formulated the following regulations:",
      "1) The entire website project can be accessed at http://localhost:5000.",
      "2) the login page can be accessed directly via the route '/'. Please confirm whether the '/' route exists first.",
      "3) The URLs in the frontend code should be provided through routing rather than using local HTML file names.",
      "4) The backend code needs to establish routes for each page, ensuring that these routes correspond directly to those used in the frontend code.",
      "5) This website is only an example and does not require an encrypted password.",
      "6) All data file read operations should start from the first line of the data file.",
      "7) Please review each function and URL in the frontend and backend code to ensure they correspond correctly, with no discrepancies in naming.",
      "Now, you should check the above regulations one by one and review the codes in detail, to ensure it COMPLIES with each regulations. Please propose one comment with the highest priority about the codes, and give me instructions on how to fix. Tell me your comment with the highest priority and corresponding suggestions on revision."
    ]
  },
  "CodeReviewModification": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Code Reviewer",
    "phase_prompt": [
      "According to the new user's task, our designed product modality, languages and ideas, our developed first-edition source codes are listed below: ",
      "Task: \"{task}\".",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Ideas: \"{ideas}\"",
      "Codes: ",
      "\"{codes}\"",
      "Comments on Codes:",
      "\"{comments}\"",
      "In the software, each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code. Format:",
      "FILENAME", 
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```",
      "As the {assistant_role}, to satisfy the new user's demand and make the software creative, executive and robust, you should modify corresponding codes according to the comments. Then, output the full and complete codes with all bugs fixed based on the comments. Return all codes strictly following the required format."
    ]
  },
  "TestOrganizing": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "According to the software requirements listed below: ",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Your goal is to organize a testing team to complete the software development task.",
      "There are two default testing tasks: ",
      "1) Test whether the website can be accessed through local port 5000. In this test, you only need to test whether the login page of the website can be accessed through the local 5000 port.",
      "2) Test whether the first page of the website is the login page and whether it can log in correctly based on the example data provided in the Task.",
      "In addition, there are other testing tasks as well:",
      "You need to assign ONE testing task to test the elements and integrity of ALL pages.",
      "In order to write testing code, you need to clearly describe the elements that need to be included in each page in this testing task, taking into account the original task requirements.",
      "Follow the format: \"COMPOSITION\" is the composition of testing tasks, and \"Workflow\" is the workflow of the programmers. Each task is assigned to a programmer, and the workflow shows the dependencies between tasks. ",
      "### COMPOSITION",
      "```",
      "Task 1: Testing task 1 description",
      "Task 2: Testing task 2 description",
      "```",
      "### WORKFLOW",
      "```",
      "Task 1: []",
      "Task 2: [Task 1]",
      "```",
      "Please note that: ",
      "1) the format of your answer must strictly comply with the above form. Your description of the testing task must be in \"COMPOSITION\";",
      "2) you don't need to modify the description of the default testing task."
    ]
  },
  "TestExecution": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "Our software requirements and developed source codes are listed below: ",
      "Modality: \"website\".",
      "Programming Language: \"Python and HTML\"",
      "Source Codes:",
      "\"{codes}\"",
      "The execution outcome of our source codes is:",
      "\"{execution_test_reports}\"",
      "According to the source code, requirements and the execution outcome, please do the following things:",
      "1) If there exists bugs in the execution report, try to modify the code to fix bugs.",
      "2) If you have modify any code, ignore the point 3).",
      "3) If the execution report shows that the codes run successfully, you should only answer: The software run successfully without errors.",
      "The output must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the programming language,\"REQUIREMENTS\" is the targeted requirement of the test case, and \"CODE\" is the test code that is used to test the specific requirement of the file. Format:\n",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "REQUIREMENTS",
      "'''",
      "CODE",
      "```",
      "Please note that the code should be fully functional. Ensure to implement all functions. No placeholders (such as 'pass' in Python)."
    ]
  },
  "SubTestErrorLocate": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "Our software requirements and developed source codes are listed below: ",
      "Programming Language: \"Python and HTML\"",
      "Testing Task description: \"{subtask}\"",
      "According to Testing Task description, please write test cases to locate the bugs, note that logging is important, ensure the content and format is right. ",
      "You should first locate the functions that need to be tested and write the test cases for them according to the testing task description.",
      "The output must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is \"{test_file_name}\", \"LANGUAGE\" in the programming language,\"REQUIREMENTS\" is the targeted requirement of the test case, and \"CODE\" is the test code that is used to test the specific requirement of the file. Format:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "REQUIREMENTS",
      "'''",
      "CODE",
      "```",
      "You will implement the \"{test_file_name}\" and finish it follows in the strictly defined format.",
      "Please note that:",
      "1. Please adhere strictly to the Testing Task description to develop unit test code for the web application using Python, Selenium, and unittest framework. ",
      "2. The test code needs to be directly executable and only need to cover the tests required by the Testing Task description.",
      "3. Chrome WebDriver is already installed and the path is in the environment variable, so there is no need to specify its path in the test code. And 'WebDriver' object has no attribute 'find_element_by_id'",
      "4. Access to the login page is available at http://localhost:5000. Navigation is restricted to http://localhost:5000 exclusively via the driver.get() method; navigation to other URLs is not allowed.",
      "5. You must utilize the username and password from Data Storage to construct a login method within the test class. ",
      "6. Access to All pages, except for the login and registration pages, requires logging in from the login page and then proceeding by clicking the corresponding buttons on the page to navigate to the desired page.",
      "7. After logging in, you will be redirected to other pages and will not stay on the login page."
    ]
  },
  "TestErrorSummary": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "Our developed source codes and corresponding test reports are listed below: ",
      "Programming Language: \"Python and HTML\"",
      "Source Codes:",
      "\"{codes}\"",
      "The execution outcome of our source codes:",
      "\"{test_reports}\"",
      "We also have write test case to test our source codes, our test codes are listed below: ",
      "\"{test_codes}\"",
      "And the execution outcome of our test codes is: ",
      "\"{testcase_reports}\"",
      "According to these imformation, please analyze the source code, test code and execution reports. You should answer strictly following the format given below",
      "file name:file_1.py",
      "function name: function_1, function_2",
      "detailed analysis of the problem: your analysis",
      "Your answer should also follow the requirements below:",
      "1) You can answer more than one function name, but you can only answer one file name each time.",
      "2) If you want to answer two file names, you should split it and answer with the format respectively.(Answer the file_1.py and corresponding information with the format, and then answer the file_2.py and corresponding information with the format)",
      "You should not answer anything about test file(e.g. file name: test_requirement_0.py) in your answer.",
      "If all the reports show that there is no bugs in source codes and test codes, you should just only reply: No error in codes."
    ]
  },
  "Updating": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "You are now a organization fine-tuner for the software development process. ",
      "Your task is to update the coding agent teams to ensure that the software requirements can be achieved.",
      "The overall requirements, current coding agent teams, and the issues in current implementation of the software are listed below: ",
      "Requirements: \"{task}\"",
      "Coding team composition: \"{composition}\".",
      "Coding team workflow: : \"{workflow}\".",
      "Source codes: \"{codes}\"",
      "Current issues: \"{issues}\".",
      "As the {assistant_role}, you should first think step by step to update the composition of subtasks based on the Task, previous workflow, and error summaries of testcase.",
      "The updated coding agent team should be in the following format: \"COMPOSITION\" is the composition of programmers' tasks, and \"Workflow\" is the workflow of the programmers. Each task is assigned to a programmer, and the workflow shows the dependencies between programmers' tasks.",
      "### COMPOSITION",
      "```",
      "Programmer 1: Task 1 description",
      "Programmer 2: Task 2 description",
      "```",
      "### WORKFLOW",
      "```",
      "Programmer 1: []",
      "Programmer 2: [Programmer 1]",
      "```",
      "Please note that:",
      "1) Each programmer should complete one subtask, and each subtask is responsible for completing one code file.",
      "2) According to the original Task description, source code, and current issues:",
      "    - Programmers who need to improve their code file will be retained in this workflow, and their subtask is to fix issues with the code files they are responsible for. In his subtask description, it is necessary to specify his tasks in detail.",
      "    - If a code file has no issues based current issue, DELETE this subtask and its programmer.",
      "    - According to the original Task, if there is a missing code file in the source code, please add a new programmer responsible for implementing the code file.",
      "3) If there is a corresponding description in the original task, please include it in the subtask and clearly and structurally highlight the key requirements of the task. ",
      "4) Each programmer is unaware of their peers' tasks, hence the description of each task should be thorough. If a task involves collaboration with other programmers, it is essential to first clarify the responsibilities of the other programmers and specify how one's own task should be coordinated to complement their efforts. ",
      "5) If there is an issue with the code file that the programmer is responsible for, please clearly state the issue and modification plan in its subtasks. ",
      "6) The workflow should not contain circles!"
    ]
  }
}