{
    "composition": {
        "Programmer 1": "Implement the backend code in `app.py` to create a web server using Flask. The website should be accessible via the local port 5000, and the login page can be directly accessed through the route '/'. The backend code must implement routing for all frontend pages, ensuring that each route corresponds to the frontend code. File read and write operations in the backend code should start from the first line of the file, without any encryption, using plain text. The frontend code files include  `login.html`, `dashboard.html`, `create_entry.html`, `edit_entry.html`, and `about.html`.",
        "Programmer 2": "Develop the frontend code for the login page in `templates/login.html`. This page should include a form with the ID `login-form`, a text input with the ID `username-input`, a password input with the ID `password-input`, and a submit button with the ID `login-button`. All URLs in the frontend code should be routes, not HTML file names.",
        "Programmer 3": "Develop the frontend code for the dashboard page in `templates/dashboard.html`. This page should include a header with the ID `dashboard-header`, a button with the ID `create-entry-button`, a list with the ID `entry-list`, an edit button with the ID `edit-entry-button`, an about button with the ID `about-button`, and a logout button with the ID `logout-button`. All URLs in the frontend code should be routes, not HTML file names.",
        "Programmer 4": "Develop the frontend code for the create journal entry page in `templates/create_entry.html`. This page should include a form with the ID `entry-form`, a text input with the ID `entry-title-input`, a textarea with the ID `entry-content-textarea`, and a submit button with the ID `save-entry-button`. All URLs in the frontend code should be routes, not HTML file names.",
        "Programmer 5": "Develop the frontend code for the edit journal entry page in `templates/edit_entry.html`. This page should include a form with the ID `edit-entry-form`, a text input with the ID `edit-title-input`, a text input with the ID `edit-content-input`, and a submit button with the ID `update-entry-button`. All URLs in the frontend code should be routes, not HTML file names.",
        "Programmer 6": "Develop the frontend code for the about page in `templates/about.html`. This page should include a header with the ID `about-header`, a text description with the ID `about-description`, and contact information with the ID `contact-info`. All URLs in the frontend code should be routes, not HTML file names.",
        "Programmer 7": "Create the CSS file in `static/css/styles.css` to style all the pages according to the application's design requirements.",
        "Programmer 8": "Create the JavaScript file in `static/js/scripts.js` to handle any client-side interactions and functionalities required for the application."
    },
    "workflow": {
        "Programmer 1": [],
        "Programmer 2": [
            "Programmer 1"
        ],
        "Programmer 3": [
            "Programmer 1"
        ],
        "Programmer 4": [
            "Programmer 1"
        ],
        "Programmer 5": [
            "Programmer 1"
        ],
        "Programmer 6": [
            "Programmer 1"
        ],
        "Programmer 7": [
            "Programmer 1"
        ],
        "Programmer 8": [
            "Programmer 1"
        ]
    }
}